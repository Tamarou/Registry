name: Code Quality

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
  schedule:
    # Run weekly on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'

jobs:
  dependency-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Perl
      uses: shogo82148/actions-setup-perl@v1
      with:
        perl-version: '5.40'

    - name: Install cpanm and carton
      run: |
        curl -L https://cpanmin.us | perl - App::cpanminus
        cpanm --notest Carton

    - name: Check dependencies
      run: |
        carton check
        echo "Dependencies check completed"

    - name: List installed modules
      run: |
        carton list > dependency-report.txt
        echo "Dependency report generated"

    - name: Upload dependency report
      uses: actions/upload-artifact@v3
      with:
        name: dependency-report
        path: dependency-report.txt

  documentation:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Check documentation
      run: |
        echo "Checking documentation completeness..."
        
        # Check for README
        if [[ -f README.md ]]; then
          echo "✅ README.md exists"
        else
          echo "❌ README.md missing"
        fi
        
        # Check for CLAUDE.md
        if [[ -f CLAUDE.md ]]; then
          echo "✅ CLAUDE.md exists"
        else
          echo "❌ CLAUDE.md missing"
        fi
        
        # Check for basic documentation in lib/
        undocumented_modules=$(find lib -name "*.pm" -exec grep -L "^=head1\|^# ABOUTME:" {} \; | wc -l)
        echo "Modules without documentation: $undocumented_modules"
        
        echo "Documentation check completed"

  performance:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: registry_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Perl
      uses: shogo82148/actions-setup-perl@v1
      with:
        perl-version: '5.40'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libpq-dev postgresql-client build-essential

    - name: Install dependencies
      run: |
        curl -L https://cpanmin.us | perl - App::cpanminus
        cpanm --notest Carton
        carton install --deployment

    - name: Setup test database
      run: |
        export PGPASSWORD=postgres
        createdb -h localhost -U postgres registry_test || true

    - name: Performance test - Database schema deployment
      run: |
        export PERL5LIB="$HOME/perl5/lib/perl5:$PERL5LIB"
        export PATH="$HOME/perl5/bin:$PATH"
        export PGPASSWORD=postgres
        
        echo "Testing schema deployment performance..."
        time carton exec sqitch deploy db:pg://postgres@localhost/registry_test
        
        echo "Schema deployment completed"

    - name: Performance test - Sample test execution
      run: |
        export PERL5LIB="$HOME/perl5/lib/perl5:$PERL5LIB"
        export PATH="$HOME/perl5/bin:$PATH"
        export PGPASSWORD=postgres
        export DATABASE_URL="postgresql://postgres:postgres@localhost:5432/registry_test"
        export EMAIL_SENDER_TRANSPORT=Test
        
        echo "Testing sample test performance..."
        time carton exec prove -lv t/dao/messages.t || true
        
        echo "Performance test completed"

  coverage:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: registry_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Perl
      uses: shogo82148/actions-setup-perl@v1
      with:
        perl-version: '5.40'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libpq-dev postgresql-client build-essential

    - name: Install dependencies and coverage tools
      run: |
        curl -L https://cpanmin.us | perl - App::cpanminus
        cpanm --notest Carton Devel::Cover
        carton install --deployment

    - name: Setup test database
      run: |
        export PGPASSWORD=postgres
        createdb -h localhost -U postgres registry_test || true

    - name: Deploy schema
      run: |
        export PERL5LIB="$HOME/perl5/lib/perl5:$PERL5LIB"
        export PATH="$HOME/perl5/bin:$PATH"
        export PGPASSWORD=postgres
        carton exec sqitch deploy db:pg://postgres@localhost/registry_test

    - name: Generate coverage report
      run: |
        export PERL5LIB="$HOME/perl5/lib/perl5:$PERL5LIB"
        export PATH="$HOME/perl5/bin:$PATH"
        export PGPASSWORD=postgres
        export DATABASE_URL="postgresql://postgres:postgres@localhost:5432/registry_test"
        export EMAIL_SENDER_TRANSPORT=Test
        
        # Run a sample of tests with coverage
        carton exec cover -test -report html_basic -ignore_re '^t/' || true
        
        echo "Coverage report generated"

    - name: Upload coverage report
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: cover_db/
      if: always()